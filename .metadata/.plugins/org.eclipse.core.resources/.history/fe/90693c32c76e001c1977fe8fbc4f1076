package stepDefinition;
   // import cucumber.api.PendingException;
	import cucumber.api.java.en.Given;
	import cucumber.api.java.en.When;
	import cucumber.api.java.en.Then;
	import cucumber.api.java.en.And;
	import cucumber.api.junit.Cucumber;

import java.util.List;

import org.junit.runner.RunWith;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;

	@RunWith(Cucumber.class)
	public class PropertyClass  {
		By createnew=By.xpath("(//a[@class='dropdown-toggle'])[2]");
		By proposal=By.xpath("//a[@id='prev_pg']");
		By clientAddNew=By.xpath("(//span[@class='newProposalInlineText1'])[1]");
		By firstName=By.xpath("//input[@id='Name']");
		By lastName=By.xpath("//input[@id='LastName']");
		By selectResource=By.xpath("(//button[@class='btn dropdown-toggle selectpicker btn-default'])[1]");
		By selectResourcelocation=By.xpath("//a[@tabindex='0']");
		By email=By.xpath("//input[@id='EMail']");
		By phone=By.xpath("//input[@id='Phone1']");
		By address=By.xpath("//input[@id='Address']");
		By city=By.xpath("//input[@id='City']");
		By selectState=By.xpath("(//button[@class='btn dropdown-toggle selectpicker btn-default'])[2]");
		By allStates=By.xpath("//a[@tabindex='0']");
		By zipcode=By.xpath("//input[@id='Zip']");
        stepdef s=new stepdef();
	    @Given("^User click on new property button after completed the normal login procedure$")
	    public void user_click_on_new_property_button_after_completed_the_normal_login_procedure() throws Throwable {
	    	s.open_the_landing_page();
	    	s.entering_the_valid_creadiential_like_name_and_password();
	    	s.enter_the_submit_button();
	    	WebElement createnew1=s.driver.findElement(createnew);
			createnew1.click();
			WebElement proposal1=driver.findElement(proposal);
			Actions a=new Actions(driver);
			a.moveToElement(proposal1).click().perform();
			//webDriverWait(PropertyNewAdd);
			Thread.sleep(5000);
			WebElement PropertyNewAdd1=driver.findElement(PropertyNewAdd);
			PropertyNewAdd1.click();
			Boolean propertypagetext=driver.findElement(TitleValidation).isDisplayed();
			if(propertypagetext.equals("ADD NEW PROPERTY"))
			{
				String data=driver.findElement(TitleValidation).getText();
				System.out.println(data);
			}
			if(propertypagetext.equals(false))
			{
				System.out.println("this is not opening as we expected page");
			}
			WebElement houseNumber=driver.findElement(HouseNo);
			houseNumber.sendKeys("3434");
			WebElement city1=driver.findElement(cityA);
			city1.sendKeys("chennaio");
			WebElement stateDropdown1=driver.findElement(stateDropdown);
			stateDropdown1.click();
			List<WebElement> locations=driver.findElements(allLocations);
			for(int i=0;i<locations.size();i++)
			{
				String option=locations.get(i).getText();
				if(option.equalsIgnoreCase("ARKANSAS"))
				{
					locations.get(i).click();
					break;
				}
			}
			WebElement zipcodee=driver.findElement(zipcode1);
			zipcodee.sendKeys("524424");
			WebElement floorvalues=driver.findElement(floorvalue);
			floorvalues.sendKeys("3");
			WebElement addButton=driver.findElement(add);
			addButton.click();
			}
	    }

	    @When("^User enter all valide data on the fields$")
	    public void user_enter_all_valide_data_on_the_fields() throws Throwable {
	       
	    }

	    @Then("^User submit the all property values$")
	    public void user_submit_the_all_property_values() throws Throwable {
	     
	    }

	    @And("^User should be validate the property created status$")
	    public void user_should_be_validate_the_property_created_status() throws Throwable {
	        
	    }

	

}
